================
趣意書
================

Clojure でオセロを作るなかで、いろいろ学べたらな、と。

以下のような事柄に触れるつもり。

　・Git の使い方（まだ怖い）
　・柔軟な設計、ナウい開発手法（TDD の実践など）
　・「原則、パターン、実践」の実践（SOLID って、ただの念仏じゃないよね？）
　・機械学習ってどんなもんなのか

================
メモ
================

[240717]
　『関数型デザイン』（Rovert C. Martin 著）をざっと読み終えたのが数週前。
　「・・・で、つぎ何しようか？」という状態。
　
　以下のサイトを参考にして進めていくつもり
　[ http://www.es-cube.net/es-cube/reversi/sample/index.html ]

　・関数「Board_Clear」を、定数を使うことで簡素化
　・構造体「_Board」のフィールドの用途、意図が不明（Stack、*Sp）

[240718]

Board	*Board_New(void);
void	Board_Delete(Board *self);

void	Board_Clear(Board *self);

	int		Board_Disk(const Board *self, int in_pos);
	int		Board_CountDisks(const Board *self, int in_color);

int		Board_Flip(Board *self, int in_color, int in_pos);
	int		Board_Unflip(Board *self);

	int		Board_CanFlip(const Board *self, int in_color, int in_pos);
	int		Board_CountFlips(const Board *self, int in_color, int in_pos);

void	Board_Copy(const Board *self, Board *out_board);
	void	Board_Reverse(Board *self);

int		Board_CanPlay(const Board *self, int in_color);

	int		Board_Pos(int in_x, int in_y);
	int		Board_X(int in_pos);
	int		Board_Y(int in_pos);
	int		Board_OpponentColor(int in_color);

[240724]

// 石置けるか？
　// はい：
　　// 状態変更
　　// 石の数をカウント:z
　　// 再描画
　　// コマンド待ち

　// いいえ：
　　// ゲーム終了？
　　　// はい：ゲーム終了
　　　// いいえ：
　　　　// パス（番交代）
　　　　// コマンド待ち
